{"ast":null,"code":"var _jsxFileName = \"C:\\\\curso react 2\\\\ecommerce-ngelabert\\\\src\\\\components\\\\checkout\\\\Checkout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCartContext } from '../../context/CartContext';\nimport CartForm from '../cart/CartForm';\nimport { getFirestore } from '../utils/getFirebase';\nimport firebase from 'firebase';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = () => {\n  _s();\n\n  const [orderData, setOrderData] = useState({});\n  const {\n    clearCart,\n    cart\n  } = useCartContext();\n  const [cartOrder, setCartOrder] = useState([]);\n  const history = useHistory();\n  const total = 0;\n  let totalShop = 0;\n  const [formData, setFormData] = useState(initialState);\n  const inputs = [{\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"ingrese su nombre\",\n    value: formData.name,\n    label: \"Nombre\"\n  }, {\n    type: \"text\",\n    name: \"lastname\",\n    placeholder: \"ingrese su apellido\",\n    value: formData.lastname,\n    label: \"Apellido\"\n  }, {\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"ingrese su telefono\",\n    value: formData.phone,\n    label: \"Número de teléfono\"\n  }, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"ingrese su email\",\n    value: formData.email,\n    label: \"Email\"\n  }, {\n    type: \"email\",\n    name: \"emailconfirmation\",\n    placeholder: \"reingrese su email\",\n    label: \"Confirmá tu email\"\n  }];\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (document.getElementsByName(\"email\") === document.getElementsByName(\"emailconfirmation\")) {\n      const newOrder = {\n        date: firebase.firestore.Timestamp.fromDate(new Date()),\n        buyer: formData,\n        item: cart,\n        total: total\n      };\n      const db = getFirestore();\n      const orderCollection = db.collection('order');\n      orderCollection.add(newOrder).then(resp => setOrderData(resp)).catch(err => console.log(err)).finally(setFormData(initialState), setCartOrder(cart), clearCart(), history.push('/'));\n    } else {\n      alert('Los emails no coinciden');\n    }\n  }\n\n  console.log(cart);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cart.length > 0 && /*#__PURE__*/_jsxDEV(CartForm, {\n      formData: formData,\n      setFormData: setFormData,\n      initialState: initialState,\n      total: total,\n      inputs: inputs,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"aokJ9irGFcYGg17dkp4zY4ZxYr4=\", false, function () {\n  return [useCartContext, useHistory];\n});\n\n_c = Checkout;\nexport default Checkout;\nconst initialState = {\n  name: '',\n  lastname: '',\n  phone: '',\n  emai: ''\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/curso react 2/ecommerce-ngelabert/src/components/checkout/Checkout.jsx"],"names":["React","useState","useCartContext","CartForm","getFirestore","firebase","NavLink","useHistory","Checkout","orderData","setOrderData","clearCart","cart","cartOrder","setCartOrder","history","total","totalShop","formData","setFormData","initialState","inputs","type","name","placeholder","value","label","lastname","phone","email","handleSubmit","e","preventDefault","document","getElementsByName","newOrder","date","firestore","Timestamp","fromDate","Date","buyer","item","db","orderCollection","collection","add","then","resp","catch","err","console","log","finally","push","alert","length","emai"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useCartContext } from '../../context/CartContext';\r\nimport CartForm from '../cart/CartForm'\r\nimport { getFirestore } from '../utils/getFirebase'\r\nimport firebase from 'firebase'\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nconst Checkout = () => {\r\n    const [orderData, setOrderData] = useState({})\r\n    const { clearCart, cart } = useCartContext()\r\n    const [cartOrder, setCartOrder] = useState([])\r\n    const history = useHistory();\r\n    \r\n    const total = 0;\r\n    let totalShop = 0;\r\n\r\n    const [formData, setFormData] = useState(initialState)\r\n    const inputs = [\r\n        {type:\"text\", name:\"name\", placeholder:\"ingrese su nombre\", value: formData.name, label: \"Nombre\"},\r\n        {type:\"text\", name:\"lastname\", placeholder:\"ingrese su apellido\", value: formData.lastname, label: \"Apellido\"},\r\n        {type:\"text\", name:\"phone\", placeholder:\"ingrese su telefono\", value: formData.phone, label: \"Número de teléfono\"},\r\n        {type:\"email\", name:\"email\", placeholder:\"ingrese su email\", value: formData.email, label: \"Email\"},\r\n        {type:\"email\", name:\"emailconfirmation\", placeholder:\"reingrese su email\", label: \"Confirmá tu email\"}\r\n    ]\r\n    \r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        if (document.getElementsByName(\"email\") === document.getElementsByName(\"emailconfirmation\")) { \r\n            const newOrder = {\r\n                date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n                buyer: formData,\r\n                item: cart,\r\n                total: total,\r\n            }\r\n            const db = getFirestore();\r\n            const orderCollection = db.collection('order');\r\n            orderCollection\r\n            .add(newOrder)\r\n            .then(resp => setOrderData(resp))\r\n            .catch(err => console.log(err))\r\n            .finally(\r\n                setFormData(initialState),\r\n                setCartOrder(cart),\r\n                clearCart(),\r\n                history.push('/')\r\n            )\r\n        }else{\r\n            alert('Los emails no coinciden')\r\n        }\r\n    }\r\n    console.log(cart)\r\n\r\n    return (\r\n        <div>\r\n            {cart.length > 0 &&\r\n                <CartForm\r\n                formData={formData}\r\n                setFormData={setFormData}\r\n                initialState={initialState}\r\n                total={total}\r\n                inputs={inputs}\r\n                handleSubmit={handleSubmit}\r\n                />\r\n            }\r\n            {/* {cart.length === 0 &&\r\n                <div className=\"cartlistcontainer\">\r\n                     \r\n                    <div>\r\n                        <h1>Gracias por tu compra.</h1>\r\n                        <h2>Tu número de orden es:</h2>\r\n                        <h3>{orderData.id}</h3>\r\n                        <h4 className=\"mt-5\">Resumen de compra</h4>\r\n                        {cartOrder.map((element) =>{\r\n                            return(\r\n                                <div className=\"centrar mt-3\">\r\n                                    <div><p>{element.qty}</p></div>\r\n                                    <div className=\"mx-3\"><p>{element.item.name}</p></div>\r\n                                    <div><p>{element.item.price}</p></div>                                \r\n                                </div>\r\n                        )})}<div className=\"d-print-none\">{cartOrder.map(element => {\r\n                            return totalShop = element.item.price * element.qty + totalShop} )}</div>\r\n                            <h3 className=\"mt-3\">Total: ${totalShop}</h3>\r\n                            <div className=\"mt-5\">\r\n                            <NavLink to=\"/\">\r\n                            <button type=\"button\" className=\"btn btn-productos btn-lg px-4 gap-3 centrar\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"top\" data-bs-content=\"Top popover\">volver al inicio</button>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n\r\nconst initialState = {\r\n    name: '',\r\n    lastname: '',\r\n    phone: '',\r\n    emai:''\r\n}"]},"metadata":{},"sourceType":"module"}