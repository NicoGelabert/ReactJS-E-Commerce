{"ast":null,"code":"var _jsxFileName = \"C:\\\\curso react 2\\\\ecommerce-ngelabert\\\\src\\\\context\\\\CartContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCartContext = () => {\n  _s();\n\n  return useContext(CartContext);\n};\n\n_s(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction CartContextProvider({\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: [],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CartContextProvider;\nexport default CartContextProvider; // export const CartContextProvider = ({children}) => {\n//     const [cart, setCart] = useState([])\n//     const isInCart = (id) => {\n//         return cart.find(element => element.item.id === id)\n//     }\n//     const addItem = (item, qty) => {\n//         if(isInCart(item.id)){\n//             const updateCart = [...cart];\n//             updateCart.forEach((element)=>{\n//                 if(element.item.id === item.id){\n//                     element.qty += qty\n//                 }\n//             })\n//             setCart(updateCart)\n//         }else{\n//         setCart([...cart, {item, qty}])\n//         }\n//     }\n//     console.log(cart)\n//     const removeItem = (itemId) =>{\n//         const cartFilter = cart.filter(element => element.item.id !== itemId)\n//         return setCart(cartFilter) \n//     }\n//     const clearCart = () => setCart([])\n//     return(\n//         <CartContext.Provider value={{addItem, isInCart, clearCart, removeItem, cart}}>\n//             {children}\n//         </CartContext.Provider>\n//     )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["C:/curso react 2/ecommerce-ngelabert/src/context/CartContext.jsx"],"names":["createContext","useState","useContext","CartContext","useCartContext","CartContextProvider","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,OAApD;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,OAAO,MAAMI,cAAc,GAAG;AAAA;;AAAA,SAAMF,UAAU,CAACC,WAAD,CAAhB;AAAA,CAAvB;;GAAMC,c;;AAEb,SAASC,mBAAT,CAA6B;AAACC,EAAAA;AAAD,CAA7B,EAAwC;AACpC,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAA7B;AAAA,cACKA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KANQD,mB;AAQT,eAAeA,mBAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createContext, useState, useContext } from 'react'\r\n\r\nconst CartContext = createContext()\r\n\r\nexport const useCartContext = () => useContext(CartContext);\r\n\r\nfunction CartContextProvider({children}){\r\n    return(\r\n        <CartContext.Provider value={[]}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartContextProvider\r\n\r\n// export const CartContextProvider = ({children}) => {\r\n\r\n//     const [cart, setCart] = useState([])\r\n\r\n//     const isInCart = (id) => {\r\n//         return cart.find(element => element.item.id === id)\r\n//     }\r\n\r\n//     const addItem = (item, qty) => {\r\n//         if(isInCart(item.id)){\r\n//             const updateCart = [...cart];\r\n//             updateCart.forEach((element)=>{\r\n//                 if(element.item.id === item.id){\r\n//                     element.qty += qty\r\n//                 }\r\n//             })\r\n//             setCart(updateCart)\r\n//         }else{\r\n//         setCart([...cart, {item, qty}])\r\n//         }\r\n//     }\r\n//     console.log(cart)\r\n\r\n//     const removeItem = (itemId) =>{\r\n//         const cartFilter = cart.filter(element => element.item.id !== itemId)\r\n//         return setCart(cartFilter) \r\n//     }\r\n\r\n//     const clearCart = () => setCart([])\r\n\r\n//     return(\r\n//         <CartContext.Provider value={{addItem, isInCart, clearCart, removeItem, cart}}>\r\n//             {children}\r\n//         </CartContext.Provider>\r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}