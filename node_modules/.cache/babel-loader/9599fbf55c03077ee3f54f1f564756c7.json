{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createContext, useState, useContext } from 'react';\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCartContext = () => {\n  _s();\n\n  return useContext(CartContext);\n}; // export const CartContextProvider = ({children}) => {\n//     const [cart, setCart] = useState([])\n//     const isInCart = (id) => {\n//         return cart.find(element => element.item.id === id)\n//     }\n//     const addItem = (item, qty) => {\n//         if(isInCart(item.id)){\n//             const updateCart = [...cart];\n//             updateCart.forEach((element)=>{\n//                 if(element.item.id === item.id){\n//                     element.qty += qty\n//                 }\n//             })\n//             setCart(updateCart)\n//         }else{\n//         setCart([...cart, {item, qty}])\n//         }\n//     }\n//     console.log(cart)\n//     const removeItem = (itemId) =>{\n//         const cartFilter = cart.filter(element => element.item.id !== itemId)\n//         return setCart(cartFilter) \n//     }\n//     const clearCart = () => setCart([])\n//     return(\n//         <CartContext.Provider value={{addItem, isInCart, clearCart, removeItem, cart}}>\n//             {children}\n//         </CartContext.Provider>\n//     )\n// }\n\n_s(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"sources":["C:/curso react 2/ecommerce-ngelabert/src/context/CartContext.jsx"],"names":["createContext","useState","useContext","CartContext","useCartContext"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,OAApD;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,OAAO,MAAMI,cAAc,GAAG;AAAA;;AAAA,SAAMF,UAAU,CAACC,WAAD,CAAhB;AAAA,CAAvB,C,CAEP;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;GArCaC,c","sourcesContent":["import { createContext, useState, useContext } from 'react'\r\n\r\nconst CartContext = createContext()\r\n\r\nexport const useCartContext = () => useContext(CartContext);\r\n\r\n// export const CartContextProvider = ({children}) => {\r\n\r\n//     const [cart, setCart] = useState([])\r\n\r\n//     const isInCart = (id) => {\r\n//         return cart.find(element => element.item.id === id)\r\n//     }\r\n\r\n//     const addItem = (item, qty) => {\r\n//         if(isInCart(item.id)){\r\n//             const updateCart = [...cart];\r\n//             updateCart.forEach((element)=>{\r\n//                 if(element.item.id === item.id){\r\n//                     element.qty += qty\r\n//                 }\r\n//             })\r\n//             setCart(updateCart)\r\n//         }else{\r\n//         setCart([...cart, {item, qty}])\r\n//         }\r\n//     }\r\n//     console.log(cart)\r\n\r\n//     const removeItem = (itemId) =>{\r\n//         const cartFilter = cart.filter(element => element.item.id !== itemId)\r\n//         return setCart(cartFilter) \r\n//     }\r\n\r\n//     const clearCart = () => setCart([])\r\n\r\n//     return(\r\n//         <CartContext.Provider value={{addItem, isInCart, clearCart, removeItem, cart}}>\r\n//             {children}\r\n//         </CartContext.Provider>\r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}