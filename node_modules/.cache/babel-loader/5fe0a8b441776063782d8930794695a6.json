{"ast":null,"code":"var _jsxFileName = \"C:\\\\curso react 2\\\\ecommerce-ngelabert\\\\src\\\\context\\\\CartContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCartContext = () => {\n  _s();\n\n  return useContext(CartContext);\n};\n\n_s(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction CartContextProvider({\n  children\n}) {\n  _s2();\n\n  const [cart, setCart] = useState([]);\n  const [cantItems, setcantItems] = useState(0);\n\n  function isInCart(id) {\n    return cart.find(element => element.item.id === id);\n  }\n\n  function addItem(item, qty) {\n    if (isInCart(item.id)) {\n      const updateCart = [...cart];\n      updateCart.forEach(element => {\n        if (element.item.id === item.id) {\n          element.qty = element.qty + qty;\n        }\n      });\n      setCart(updateCart);\n    } else {\n      setCart([...cart, {\n        item,\n        qty\n      }]);\n      setcantItems(cantItems + qty);\n    }\n  }\n\n  console.log(cart);\n\n  function clearCart() {\n    setCart([]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addItem,\n      clearCart,\n      cantItems\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CartContextProvider, \"D725gD6dbw+ci8WCkSrnXIsNI2U=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider; // export const CartContextProvider = ({children}) => {\n//     \n//     const removeItem = (itemId) =>{\n//         const cartFilter = cart.filter(element => element.item.id !== itemId)\n//         return setCart(cartFilter) \n//     }\n//     const clearCart = () => setCart([])\n//     return(\n//         <CartContext.Provider value={{addItem, isInCart, clearCart, removeItem, cart}}>\n//             {children}\n//         </CartContext.Provider>\n//     )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["C:/curso react 2/ecommerce-ngelabert/src/context/CartContext.jsx"],"names":["createContext","useState","useContext","CartContext","useCartContext","CartContextProvider","children","cart","setCart","cantItems","setcantItems","isInCart","id","find","element","item","addItem","qty","updateCart","forEach","console","log","clearCart"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,OAApD;;AACA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,OAAO,MAAMI,cAAc,GAAG;AAAA;;AAAA,SAAMF,UAAU,CAACC,WAAD,CAAhB;AAAA,CAAvB;;GAAMC,c;;AAEb,SAASC,mBAAT,CAA6B;AAACC,EAAAA;AAAD,CAA7B,EAAwC;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAAD,CAA1C;;AAEA,WAASU,QAAT,CAAkBC,EAAlB,EAAqB;AACjB,WAAOL,IAAI,CAACM,IAAL,CAAUC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaH,EAAb,KAAoBA,EAAzC,CAAP;AACH;;AAED,WAASI,OAAT,CAAiBD,IAAjB,EAAuBE,GAAvB,EAA2B;AACvB,QAAGN,QAAQ,CAACI,IAAI,CAACH,EAAN,CAAX,EAAqB;AACjB,YAAMM,UAAU,GAAG,CAAC,GAAGX,IAAJ,CAAnB;AACAW,MAAAA,UAAU,CAACC,OAAX,CAAoBL,OAAD,IAAW;AAC1B,YAAGA,OAAO,CAACC,IAAR,CAAaH,EAAb,KAAoBG,IAAI,CAACH,EAA5B,EAA+B;AAC3BE,UAAAA,OAAO,CAACG,GAAR,GAAcH,OAAO,CAACG,GAAR,GAAcA,GAA5B;AACH;AACJ,OAJD;AAKAT,MAAAA,OAAO,CAACU,UAAD,CAAP;AACH,KARD,MAQK;AACDV,MAAAA,OAAO,CAAC,CAAE,GAAGD,IAAL,EAAW;AAACQ,QAAAA,IAAD;AAAOE,QAAAA;AAAP,OAAX,CAAD,CAAP;AACAP,MAAAA,YAAY,CAACD,SAAS,GAAGQ,GAAb,CAAZ;AACH;AACJ;;AAIDG,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;;AAEA,WAASe,SAAT,GAAoB;AAChBd,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AAED,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACD,MAAAA,IAAD;AAAOS,MAAAA,OAAP;AAAgBM,MAAAA,SAAhB;AAA2Bb,MAAAA;AAA3B,KAA7B;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IApCQD,mB;;KAAAA,mB;AAsCT,eAAeA,mBAAf,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createContext, useState, useContext } from 'react'\r\nconst CartContext = createContext()\r\n\r\nexport const useCartContext = () => useContext(CartContext);\r\n\r\nfunction CartContextProvider({children}){\r\n    const [cart, setCart] = useState([])\r\n    const [cantItems, setcantItems] = useState(0);\r\n\r\n    function isInCart(id){\r\n        return cart.find(element => element.item.id === id)\r\n    }\r\n\r\n    function addItem(item, qty){\r\n        if(isInCart(item.id)){\r\n            const updateCart = [...cart];\r\n            updateCart.forEach((element)=>{\r\n                if(element.item.id === item.id){\r\n                    element.qty = element.qty + qty\r\n                }\r\n            })\r\n            setCart(updateCart)\r\n        }else{\r\n            setCart([ ...cart, {item, qty} ])\r\n            setcantItems(cantItems + qty);\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    console.log(cart)\r\n\r\n    function clearCart(){\r\n        setCart([])\r\n    }\r\n\r\n    return(\r\n        <CartContext.Provider value={{cart, addItem, clearCart, cantItems}}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartContextProvider\r\n\r\n// export const CartContextProvider = ({children}) => {\r\n\r\n//     \r\n\r\n//     const removeItem = (itemId) =>{\r\n//         const cartFilter = cart.filter(element => element.item.id !== itemId)\r\n//         return setCart(cartFilter) \r\n//     }\r\n\r\n//     const clearCart = () => setCart([])\r\n\r\n//     return(\r\n//         <CartContext.Provider value={{addItem, isInCart, clearCart, removeItem, cart}}>\r\n//             {children}\r\n//         </CartContext.Provider>\r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}