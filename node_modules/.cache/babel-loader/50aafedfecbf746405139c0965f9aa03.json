{"ast":null,"code":"var _jsxFileName = \"C:\\\\curso react 2\\\\ecommerce-ngelabert\\\\src\\\\context\\\\CartContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext([]);\nexport const CartContextProvider = ({\n  item,\n  children\n}) => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n\n  const addItem = (item, qty) => {\n    if (isInCart(item.id)) {\n      const updateCart = [...cart];\n      updateCart.forEach(element => {\n        if (element.item.id === item.id) {\n          element.qty += qty;\n        }\n      });\n      setCart(updateCart);\n    } else {\n      setCart([...cart, {\n        item,\n        qty\n      }]);\n    }\n  };\n\n  console.log(cart);\n\n  const isInCart = id => {\n    return cart.find(element => element.item.id === id);\n  };\n\n  const removeItem = itemId => {\n    const cartFilter = cart.filter(element => element.item.id !== itemId);\n    return setCart(cartFilter);\n  };\n\n  const clearCart = () => setCart([]);\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      addItem,\n      isInCart,\n      clearCart,\n      removeItem,\n      cart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartContextProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n\n_c = CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["C:/curso react 2/ecommerce-ngelabert/src/context/CartContext.jsx"],"names":["createContext","useState","CartContext","CartContextProvider","item","children","cart","setCart","addItem","qty","isInCart","id","updateCart","forEach","element","console","log","find","removeItem","itemId","cartFilter","filter","clearCart"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,MAAMG,mBAAmB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAsB;AAAA;;AAErD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,OAAO,GAAG,CAACJ,IAAD,EAAOK,GAAP,KAAe;AAC3B,QAAGC,QAAQ,CAACN,IAAI,CAACO,EAAN,CAAX,EAAqB;AACjB,YAAMC,UAAU,GAAG,CAAC,GAAGN,IAAJ,CAAnB;AACAM,MAAAA,UAAU,CAACC,OAAX,CAAoBC,OAAD,IAAW;AAC1B,YAAGA,OAAO,CAACV,IAAR,CAAaO,EAAb,KAAoBP,IAAI,CAACO,EAA5B,EAA+B;AAC3BG,UAAAA,OAAO,CAACL,GAAR,IAAeA,GAAf;AACH;AACJ,OAJD;AAKAF,MAAAA,OAAO,CAACK,UAAD,CAAP;AACH,KARD,MAQK;AACLL,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAACF,QAAAA,IAAD;AAAOK,QAAAA;AAAP,OAAV,CAAD,CAAP;AACC;AACJ,GAZD;;AAaAM,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;;AAEA,QAAMI,QAAQ,GAAIC,EAAD,IAAQ;AACrB,WAAOL,IAAI,CAACW,IAAL,CAAUH,OAAO,IAAIA,OAAO,CAACV,IAAR,CAAaO,EAAb,KAAoBA,EAAzC,CAAP;AACH,GAFD;;AAIA,QAAMO,UAAU,GAAIC,MAAD,IAAW;AAC1B,UAAMC,UAAU,GAAGd,IAAI,CAACe,MAAL,CAAYP,OAAO,IAAIA,OAAO,CAACV,IAAR,CAAaO,EAAb,KAAoBQ,MAA3C,CAAnB;AACA,WAAOZ,OAAO,CAACa,UAAD,CAAd;AACH,GAHD;;AAKA,QAAME,SAAS,GAAG,MAAMf,OAAO,CAAC,EAAD,CAA/B;;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAD;AAAUE,MAAAA,QAAV;AAAoBY,MAAAA,SAApB;AAA+BJ,MAAAA,UAA/B;AAA2CZ,MAAAA;AAA3C,KAA7B;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnCM;;GAAMF,mB;;KAAAA,mB","sourcesContent":["import { createContext, useState } from 'react'\r\n\r\nexport const CartContext = createContext([])\r\n\r\nexport const CartContextProvider = ({item, children}) => {\r\n\r\n    const [cart, setCart] = useState([])\r\n\r\n    const addItem = (item, qty) => {\r\n        if(isInCart(item.id)){\r\n            const updateCart = [...cart];\r\n            updateCart.forEach((element)=>{\r\n                if(element.item.id === item.id){\r\n                    element.qty += qty\r\n                }\r\n            })\r\n            setCart(updateCart)\r\n        }else{\r\n        setCart([...cart, {item, qty}])\r\n        }\r\n    }\r\n    console.log(cart)\r\n\r\n    const isInCart = (id) => {\r\n        return cart.find(element => element.item.id === id)\r\n    }\r\n\r\n    const removeItem = (itemId) =>{\r\n        const cartFilter = cart.filter(element => element.item.id !== itemId)\r\n        return setCart(cartFilter) \r\n    }\r\n\r\n    const clearCart = () => setCart([])\r\n\r\n    return(\r\n        <CartContext.Provider value={{addItem, isInCart, clearCart, removeItem, cart}}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}