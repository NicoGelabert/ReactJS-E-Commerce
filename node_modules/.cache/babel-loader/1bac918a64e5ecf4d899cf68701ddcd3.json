{"ast":null,"code":"import _objectSpread from\"C:/curso react 2/ecommerce-ngelabert/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/curso react 2/ecommerce-ngelabert/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Greeting from'../greetings/Greeting';import ItemList from'./ItemList';import'./body.css';import{useParams}from'react-router-dom';import{getFirestore}from'../utils/getFirebase';import Loader from'../loader/Loader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ItemListContainer=function ItemListContainer(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),products=_useState2[0],setProducts=_useState2[1];var _useParams=useParams(),slug=_useParams.slug;var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){var db=getFirestore();var itemCollection=db.collection('items');var collectionQuery=slug?itemCollection.where('slug','==',slug):itemCollection;collectionQuery.get().then(function(querySnapshot){setProducts(querySnapshot.docs.map(function(doc){return _objectSpread({id:doc.id},doc.data());}));setLoading(false);}).catch(function(err){return console.log(err);}).finally(function(){setLoading(false);});},[slug]);return/*#__PURE__*/_jsxs(\"div\",{className:\"px-4 my-5 text-center\",children:[/*#__PURE__*/_jsx(Greeting,{}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsx(ItemList,{products:products})]});};export default ItemListContainer;","map":{"version":3,"sources":["C:/curso react 2/ecommerce-ngelabert/src/components/items/ItemListContainer.jsx"],"names":["React","useState","useEffect","Greeting","ItemList","useParams","getFirestore","Loader","ItemListContainer","products","setProducts","slug","loading","setLoading","db","itemCollection","collection","collectionQuery","where","get","then","querySnapshot","docs","map","doc","id","data","catch","err","console","log","finally"],"mappings":"qTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAO,YAAP,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,YAAT,KAA6B,sBAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5B,cAAgCP,QAAQ,CAAC,EAAD,CAAxC,wCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAAeL,SAAS,EAAxB,CAAOM,IAAP,YAAOA,IAAP,CACA,eAA8BV,QAAQ,CAAC,IAAD,CAAtC,yCAAOW,OAAP,eAAgBC,UAAhB,eAEAX,SAAS,CAAC,UAAI,CACV,GAAMY,CAAAA,EAAE,CAAGR,YAAY,EAAvB,CACA,GAAMS,CAAAA,cAAc,CAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAvB,CACA,GAAMC,CAAAA,eAAe,CAAGN,IAAI,CAAGI,cAAc,CAACG,KAAf,CAAqB,MAArB,CAA6B,IAA7B,CAAmCP,IAAnC,CAAH,CAA8CI,cAA1E,CAEAE,eAAe,CACdE,GADD,GAECC,IAFD,CAEM,SAACC,aAAD,CAAmB,CACrBX,WAAW,CAACW,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,wBAAOC,EAAE,CAAED,GAAG,CAACC,EAAf,EAAsBD,GAAG,CAACE,IAAJ,EAAtB,GAA1B,CAAD,CAAX,CACAb,UAAU,CAAC,KAAD,CAAV,CACH,CALD,EAMCc,KAND,CAMO,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EANV,EAOCG,OAPD,CAOS,UAAM,CAAClB,UAAU,CAAC,KAAD,CAAV,CAAkB,CAPlC,EAQC,CAbI,CAcL,CAACF,IAAD,CAdK,CAAT,CAgBA,mBACI,aAAK,SAAS,CAAC,uBAAf,wBACI,KAAC,QAAD,IADJ,CAGIC,OAAO,cAEP,KAAC,MAAD,IAFO,cAIP,KAAC,QAAD,EAAU,QAAQ,CAAEH,QAApB,EAPJ,GADJ,CAYH,CAjCD,CAmCA,cAAeD,CAAAA,iBAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport Greeting from '../greetings/Greeting';\r\nimport ItemList from './ItemList';\r\nimport './body.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getFirestore } from '../utils/getFirebase';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst ItemListContainer = () => { \r\n    const [products, setProducts] = useState([]);\r\n    const {slug} = useParams();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        const db = getFirestore();\r\n        const itemCollection = db.collection('items')\r\n        const collectionQuery = slug ? itemCollection.where('slug', '==', slug) : itemCollection;\r\n\r\n        collectionQuery\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            setProducts(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n            setLoading(false);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {setLoading(false)});\r\n        },\r\n        [slug]);\r\n\r\n    return (\r\n        <div className=\"px-4 my-5 text-center\">\r\n            <Greeting />\r\n            {\r\n            loading\r\n            ?\r\n            <Loader/>\r\n            :\r\n            <ItemList products={products}/>\r\n            }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemListContainer\r\n"]},"metadata":{},"sourceType":"module"}