{"ast":null,"code":"var _jsxFileName = \"C:\\\\curso react 2\\\\ecommerce-ngelabert\\\\src\\\\components\\\\items\\\\ItemListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Greeting from '../greetings/Greeting';\nimport ItemList from './ItemList';\nimport { promiseList } from '../utils/promises';\nimport './body.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const {\n    category\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (category === undefined) {\n      promiseList.then(x => {\n        setProducts(x);\n        setLoading(false);\n      }).catch(err => {\n        console.log(err.message);\n      });\n    } else {\n      promiseList.then(x => {\n        setProducts(x.filter(y => category === y.category));\n        setLoading(false);\n      });\n    }\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-4 my-5 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      products: products,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemListContainer, \"Rf2uDPFhLbzl4NBSIahxgBQ2LF8=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["C:/curso react 2/ecommerce-ngelabert/src/components/items/ItemListContainer.jsx"],"names":["React","useState","useEffect","Greeting","ItemList","promiseList","useParams","ItemListContainer","products","setProducts","category","loading","setLoading","undefined","then","x","catch","err","console","log","message","filter","y"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAO,YAAP;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAACS,IAAAA;AAAD,MAAaJ,SAAS,EAA5B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAGZ,QAAGQ,QAAQ,KAAGG,SAAd,EAAwB;AACpBR,MAAAA,WAAW,CAACS,IAAZ,CACKC,CAAD,IAAM;AAACN,QAAAA,WAAW,CAACM,CAAD,CAAX;AACPH,QAAAA,UAAU,CAAC,KAAD,CAAV;AAAkB,OAFtB,EAGKI,KAHL,CAGaC,GAAD,IAAQ;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AAAyB,OAH9C;AAIH,KALD,MAKK;AACDf,MAAAA,WAAW,CAACS,IAAZ,CACKC,CAAD,IAAK;AAACN,QAAAA,WAAW,CAACM,CAAC,CAACM,MAAF,CAASC,CAAC,IAAIZ,QAAQ,KAAKY,CAAC,CAACZ,QAA7B,CAAD,CAAX;AACNE,QAAAA,UAAU,CAAC,KAAD,CAAV;AAAkB,OAFtB;AAIH;AACJ,GAdQ,EAcN,CAACF,QAAD,CAdM,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF,QAApB;AAA8B,MAAA,OAAO,EAAEG;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3BD;;GAAMJ,iB;UAEiBD,S;;;KAFjBC,iB;AA6BN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport Greeting from '../greetings/Greeting';\r\nimport ItemList from './ItemList';\r\nimport { promiseList } from '../utils/promises';\r\nimport './body.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ItemListContainer = () => { \r\n    const [products, setProducts] = useState([]);\r\n    const {category} = useParams();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n        if(category===undefined){\r\n            promiseList.then(\r\n                (x)=> {setProducts(x)\r\n                setLoading(false)})\r\n                .catch( (err)=> {console.log(err.message)} )\r\n        }else{\r\n            promiseList.then(\r\n                (x)=>{setProducts(x.filter(y => category === y.category))\r\n                setLoading(false)}\r\n            )\r\n        }\r\n    }, [category])\r\n\r\n    return (\r\n        <div className=\"px-4 my-5 text-center\">\r\n            <Greeting />\r\n            <ItemList products={products} loading={loading}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemListContainer\r\n"]},"metadata":{},"sourceType":"module"}