{"ast":null,"code":"var _jsxFileName = \"C:\\\\curso react 2\\\\ecommerce-ngelabert\\\\src\\\\components\\\\cart\\\\CartForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCartContext } from '../../context/CartContext';\nimport { getFirestore } from '../utils/getFirebase';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartForm = ({\n  formData,\n  setFormData,\n  initialState,\n  total\n}) => {\n  _s();\n\n  const {\n    clearCart,\n    cart\n  } = useCartContext(); // function handleChange(e) {\n  //     setFormData(\n  //         {\n  //             ...formData,\n  //             [e.target.name]: e.target.value,\n  //         }\n  //     )\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newOrder = {\n      date: firebase.firestore.Timestamp.fromDate(new Date()),\n      buyer: formData,\n      item: cart,\n      total: total\n    };\n    const db = getFirestore();\n    const orderCollection = db.collection('order');\n    orderCollection.add(newOrder).then(resp => alert(`Felicitaciones por tu compra. Tu número de orden es: ${resp.id}`)).catch(err => console.log(err)).finally(setFormData(initialState), clearCart());\n  } // function handleSubmit(e){\n  //     e.preventDefault()\n  //     const newOrder={\n  //         date: firebase.firestore.Timestamp.fromDate(new Date()),\n  //         buyer: formData,\n  //         items: cart,\n  //         total: total\n  //     }\n  // const db = getFirestore()\n  // const order = db.collection('orders')\n  // order.add(newOrder)\n  // .then(resp => alert(`la orden de compra es: ${resp.id}`))\n  // .catch(err => console.log(err))\n  // .finally(\n  //     setFormData(initialState),\n  //     clearCart()\n  // )}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"ingrese su nombre\",\n        value: formData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastname\",\n        placeholder: \"ingrese su apellido\",\n        value: formData.lastname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        placeholder: \"ingrese su telefono\",\n        value: formData.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"ingrese su email\",\n        value: formData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"emailconfirmation\",\n        placeholder: \"reingrese su email\",\n        value: formData.emailconfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"confirmar compra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartForm, \"TP0uVUG1T+RCet5AmfHJJRxz+sE=\", false, function () {\n  return [useCartContext];\n});\n\n_c = CartForm;\nexport default CartForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartForm\");","map":{"version":3,"sources":["C:/curso react 2/ecommerce-ngelabert/src/components/cart/CartForm.jsx"],"names":["React","useCartContext","getFirestore","firebase","CartForm","formData","setFormData","initialState","total","clearCart","cart","handleSubmit","e","preventDefault","newOrder","date","firestore","Timestamp","fromDate","Date","buyer","item","db","orderCollection","collection","add","then","resp","alert","id","catch","err","console","log","finally","name","lastname","phone","email","emailconfirmation"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,YAAxB;AAAsCC,EAAAA;AAAtC,CAAD,KAAkD;AAAA;;AAE/D,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAoBT,cAAc,EAAxC,CAF+D,CAI/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAASU,YAAT,CAAsBC,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG;AACbC,MAAAA,IAAI,EAAEZ,QAAQ,CAACa,SAAT,CAAmBC,SAAnB,CAA6BC,QAA7B,CAAsC,IAAIC,IAAJ,EAAtC,CADO;AAEbC,MAAAA,KAAK,EAAEf,QAFM;AAGbgB,MAAAA,IAAI,EAAEX,IAHO;AAIbF,MAAAA,KAAK,EAAEA;AAJM,KAAjB;AAMA,UAAMc,EAAE,GAAGpB,YAAY,EAAvB;AACA,UAAMqB,eAAe,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAxB;AACAD,IAAAA,eAAe,CACdE,GADD,CACKX,QADL,EAECY,IAFD,CAEMC,IAAI,IAAIC,KAAK,CAAG,wDAAuDD,IAAI,CAACE,EAAG,EAAlE,CAFnB,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHd,EAICG,OAJD,CAKI5B,WAAW,CAACC,YAAD,CALf,EAMIE,SAAS,EANb;AAQH,GA9B8D,CA+B/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBACI;AAAA,2BACI;AACA,MAAA,QAAQ,EAAEE,YADV;AAAA,8BAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,WAAW,EAAC,mBAA3C;AAA+D,QAAA,KAAK,EAAEN,QAAQ,CAAC8B;AAA/E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,WAAW,EAAC,qBAA/C;AAAqE,QAAA,KAAK,EAAE9B,QAAQ,CAAC+B;AAArF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,WAAW,EAAC,qBAA5C;AAAkE,QAAA,KAAK,EAAE/B,QAAQ,CAACgC;AAAlF;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,OAAzB;AAAiC,QAAA,WAAW,EAAC,kBAA7C;AAAgE,QAAA,KAAK,EAAEhC,QAAQ,CAACiC;AAAhF;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,mBAAzB;AAA6C,QAAA,WAAW,EAAC,oBAAzD;AAA8E,QAAA,KAAK,EAAEjC,QAAQ,CAACkC;AAA9F;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAtED;;GAAMnC,Q;UAEwBH,c;;;KAFxBG,Q;AAwEN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport { useCartContext } from '../../context/CartContext'\r\nimport { getFirestore } from '../utils/getFirebase'\r\nimport firebase from 'firebase'\r\n\r\nconst CartForm = ({formData, setFormData, initialState, total}) => {\r\n    \r\n    const {clearCart, cart} = useCartContext()\r\n    \r\n    // function handleChange(e) {\r\n    //     setFormData(\r\n    //         {\r\n    //             ...formData,\r\n    //             [e.target.name]: e.target.value,\r\n    //         }\r\n    //     )\r\n    // }\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        const newOrder = {\r\n            date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n            buyer: formData,\r\n            item: cart,\r\n            total: total,\r\n        }\r\n        const db = getFirestore();\r\n        const orderCollection = db.collection('order');\r\n        orderCollection\r\n        .add(newOrder)\r\n        .then(resp => alert (`Felicitaciones por tu compra. Tu número de orden es: ${resp.id}`))\r\n        .catch(err => console.log(err))\r\n        .finally(\r\n            setFormData(initialState),\r\n            clearCart()\r\n        )\r\n    }\r\n    // function handleSubmit(e){\r\n    //     e.preventDefault()\r\n    //     const newOrder={\r\n    //         date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n    //         buyer: formData,\r\n    //         items: cart,\r\n    //         total: total\r\n    //     }\r\n    // const db = getFirestore()\r\n    // const order = db.collection('orders')\r\n    // order.add(newOrder)\r\n    // .then(resp => alert(`la orden de compra es: ${resp.id}`))\r\n    // .catch(err => console.log(err))\r\n    // .finally(\r\n    //     setFormData(initialState),\r\n    //     clearCart()\r\n    // )}\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <form\r\n            onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"name\" placeholder=\"ingrese su nombre\" value={formData.name}></input>\r\n                <input type=\"text\" name=\"lastname\" placeholder=\"ingrese su apellido\" value={formData.lastname}></input>\r\n                <input type=\"text\" name=\"phone\" placeholder=\"ingrese su telefono\" value={formData.phone}></input>\r\n                <input type=\"email\" name=\"email\" placeholder=\"ingrese su email\" value={formData.email}></input>\r\n                <input type=\"email\" name=\"emailconfirmation\" placeholder=\"reingrese su email\" value={formData.emailconfirmation}></input>\r\n                <button>confirmar compra</button> \r\n            </form>\r\n            {/* <form\r\n                onSubmit={handleSubmit}\r\n                onChange={handleChange}\r\n            >\r\n                {inputs.map(inp => <input type={inp.type} placeholder={inp.placeholder} name={inp.name} value={inp.value} />)}\r\n            <button>Generar Orden de compra</button>\r\n            </form> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartForm\r\n"]},"metadata":{},"sourceType":"module"}