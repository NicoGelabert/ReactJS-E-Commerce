{"ast":null,"code":"var _jsxFileName = \"C:\\\\curso react 2\\\\ecommerce-ngelabert\\\\src\\\\components\\\\cart\\\\CartForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCartContext } from '../../context/CartContext';\nimport { getFirestore } from '../utils/getFirebase';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartForm = ({\n  inputs,\n  formData,\n  setFormata,\n  initialState,\n  total\n}) => {\n  _s();\n\n  const {\n    clearCart,\n    cart\n  } = useCartContext();\n\n  function handleChange(e) {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  let newOrder = '';\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let newOrder = {\n      buyer: formData,\n      shop: cart,\n      total: total,\n      date: firebase.firestore.Timestamp.fromDate(new Date())\n    };\n  }\n\n  const db = getFirestore();\n  const order = db.collection('orders');\n  order.add(newOrder).then(resp => alert(`la orden de compra es: ${resp.id}`)).catch(err => console.log(err)).finally(setFormata(initialState), clearCart);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      children: inputs.map(inp => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: inp.type,\n        placeholder: inp.placeholder,\n        name: inp.name,\n        value: inp.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Generar Orden de compra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartForm, \"TP0uVUG1T+RCet5AmfHJJRxz+sE=\", false, function () {\n  return [useCartContext];\n});\n\n_c = CartForm;\nexport default CartForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartForm\");","map":{"version":3,"sources":["C:/curso react 2/ecommerce-ngelabert/src/components/cart/CartForm.jsx"],"names":["React","useCartContext","getFirestore","firebase","CartForm","inputs","formData","setFormata","initialState","total","clearCart","cart","handleChange","e","setFormData","target","name","value","newOrder","handleSubmit","preventDefault","buyer","shop","date","firestore","Timestamp","fromDate","Date","db","order","collection","add","then","resp","alert","id","catch","err","console","log","finally","map","inp","type","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA,YAA/B;AAA6CC,EAAAA;AAA7C,CAAD,KAAyD;AAAA;;AAEtE,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAoBV,cAAc,EAAxC;;AAEA,WAASW,YAAT,CAAsBC,CAAtB,EAAyB;AACrBC,IAAAA,WAAW,CACP,EACI,GAAGR,QADP;AAEI,OAACO,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAF9B,KADO,CAAX;AAMH;;AACD,MAAIC,QAAQ,GAAG,EAAf;;AACA,WAASC,YAAT,CAAsBN,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACO,cAAF;AACA,QAAIF,QAAQ,GAAG;AACXG,MAAAA,KAAK,EAAEf,QADI;AAEXgB,MAAAA,IAAI,EAAEX,IAFK;AAGXF,MAAAA,KAAK,EAAEA,KAHI;AAIXc,MAAAA,IAAI,EAAEpB,QAAQ,CAACqB,SAAT,CAAmBC,SAAnB,CAA6BC,QAA7B,CAAsC,IAAIC,IAAJ,EAAtC;AAJK,KAAf;AAMH;;AACD,QAAMC,EAAE,GAAG1B,YAAY,EAAvB;AACA,QAAM2B,KAAK,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAd;AACAD,EAAAA,KAAK,CACJE,GADD,CACKb,QADL,EAECc,IAFD,CAEMC,IAAI,IAAIC,KAAK,CAAE,0BAAyBD,IAAI,CAACE,EAAG,EAAnC,CAFnB,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHd,EAICG,OAJD,CAKIjC,UAAU,CAACC,YAAD,CALd,EAMIE,SANJ;AASA,sBACI;AAAA,4BACI;AACI,MAAA,QAAQ,EAAES,YADd;AAEI,MAAA,QAAQ,EAAEP,YAFd;AAAA,gBAIKP,MAAM,CAACoC,GAAP,CAAWC,GAAG,iBAAI;AAAO,QAAA,IAAI,EAAEA,GAAG,CAACC,IAAjB;AAAuB,QAAA,WAAW,EAAED,GAAG,CAACE,WAAxC;AAAqD,QAAA,IAAI,EAAEF,GAAG,CAAC1B,IAA/D;AAAqE,QAAA,KAAK,EAAE0B,GAAG,CAACzB;AAAhF;AAAA;AAAA;AAAA;AAAA,cAAlB;AAJL;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA5CD;;GAAMb,Q;UAEwBH,c;;;KAFxBG,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport { useCartContext } from '../../context/CartContext'\r\nimport { getFirestore } from '../utils/getFirebase'\r\nimport firebase from 'firebase'\r\n\r\nconst CartForm = ({inputs, formData, setFormata, initialState, total}) => {\r\n\r\n    const {clearCart, cart} = useCartContext()\r\n\r\n    function handleChange(e) {\r\n        setFormData(\r\n            {\r\n                ...formData,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        )\r\n    }\r\n    let newOrder = ''\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        let newOrder = {\r\n            buyer: formData,\r\n            shop: cart,\r\n            total: total,\r\n            date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n        }\r\n    }\r\n    const db = getFirestore()\r\n    const order = db.collection('orders')\r\n    order\r\n    .add(newOrder)\r\n    .then(resp => alert(`la orden de compra es: ${resp.id}`))\r\n    .catch(err => console.log(err))\r\n    .finally(\r\n        setFormata(initialState),\r\n        clearCart\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={handleSubmit}\r\n                onChange={handleChange}\r\n            >\r\n                {inputs.map(inp => <input type={inp.type} placeholder={inp.placeholder} name={inp.name} value={inp.value} />)}\r\n            </form>\r\n            <button>Generar Orden de compra</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartForm\r\n"]},"metadata":{},"sourceType":"module"}